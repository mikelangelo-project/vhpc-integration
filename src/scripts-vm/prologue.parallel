#!/bin/bash
#
# Copyright 2015 HLRS, University of Stuttgart
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#============================================================================#
#                                                                            #
#                          GLOBAL CONFIGURATION                              #
#                                                                            #
#============================================================================#

# source the global profile, for getting DEBUG and TRACE flags if set
source /etc/profile.d/99-mikelangelo-hpc_stack.sh;

#
#
#
source $SCRIPT_BASE_DIR/common/root-config.sh $@;
source $SCRIPT_BASE_DIR/common/root-functions.sh;


#============================================================================#
#                                                                            #
#                          SCRIPT CONFIGURATION                              #
#                                                                            #
#============================================================================#

#
if [ $# -lt 1 ] \
    && [ -z $PBS_JOBID ] ; then
  echo "usage: $(basename ${BASH_SOURCE[0]}) <jobID> <userName>"; # relevant if not executed by Torque, but manually
  exit 1;
fi

#
# set the job id
#
if [ -n "$PBS_JOBID" ]; then
  JOBID=$PBS_JOBID;
else
  JOBID=$1;
fi

# get user name
if [ -n "$2" ]; then
  USERNAME=$2;
else
  $DEBUG && echo "No User known!";
  exit 1;
fi


#
LOG_FILE=/var/log/pbs_root_epilogue.parallel.log;




#============================================================================#
#                                                                            #
#                               FUNCTIONS                                    #
#                                                                            #
#============================================================================#





#============================================================================#
#                                                                            #
#                                 MAIN                                       #
#                                                                            #
#============================================================================#

logDebugMsg "Running Prologue-Parallel as '$(id)', file: '$(basename ${BASH_SOURCE[0]})'";
logInfoMsg "Root VM prologue.parallel script started.";

copyOutputStreams;

#
logInfoMsg "Root VM prologue.parallel script finished.";

# print the consumed time in debug mode
runTimeStats;

# run the job
exit 0;
